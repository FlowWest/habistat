name: Deploy pkgdown

on:
  push:
    branches:
      - main  # or your default branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: r-lib/actions/setup-r@v2
    - name: Install dependencies
      run: R -e 'install.packages(c("remotes", "pkgdown")); remotes::install_deps()'
    - name: Build pkgdown site
      run: R -e 'pkgdown::build_site()'
    - name: Commit and push changes
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"
        git add docs/
        git commit -m "Deploy pkgdown site"
        git push


# # Simple workflow for deploying static content to GitHub Pages
# name: Deploy static content to Pages
#
# on:
#   # Runs on pushes targeting the default branch
#   push:
#     branches:
#     - "main" #"training-data-no-bfc-removal"]
#
#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:
#
# # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions:
#   contents: read
#   pages: write
#   id-token: write
#
# # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
# concurrency:
#   group: "pages"
#   cancel-in-progress: false
#
# jobs:
#   # Single deploy job since we're just deploying
#   deploy:
#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#       - name: Setup Pages
#         uses: actions/configure-pages@v5
#       - name: Upload artifact
#         uses: actions/upload-pages-artifact@v3
#         with:
#           path: './docs'
#       - name: Deploy to GitHub Pages
#         id: deployment
#         uses: actions/deploy-pages@v4
